.TH JEAMLAND 6 "Dec 1st 1996"
.\" This is a comment ;-)

.SH NAME
jlm \- JeamLand Loadable Module Library

.SH SYNOPSIS
.nf
\fB#include "jlm.h"\fR

\fBstruct line *read_line(void);\fR
\fBvoid free_line(struct line *\fIline\fB);\fR
\fBint register_ident(char *\fIid\fB);\fR
\fBint claim_command(char *\fIcmd\fB);\fR
\fBvoid write_user(char *\fIuser\fB, char *\fIformat\fB, ...);\fR
\fBvoid write_level(char *\fIlevel\fB, char *\fIformat\fB, ...);\fR
\fBvoid notify_level(char *\fIlevel\fB, char *\fIformat\fB, ...);\fR
\fBvoid chattr(char *\fIuser\fB, char *\fIattr\fB);\fR
\fBvoid force(char *\fIuser\fB, char *\fIcommand\fB);\fR

.SH DESCRIPTION

The jlm library exists to provide a simple and uniform interface to the
main talker, any changes to the communication protocol will be hidden
from any modules written using this library.

.SH FUNCTIONS

\fBread_line\fR forces the module to sleep until it receives some useful
input. On receipt of this input, it returns a pointer to a malloced line
struct as shown below. This struct must be freed once you have finished
interrogating it with a call to \fIfree_line\fR. If \fBread_line\fR returns
a NULL pointer, then an error occured.

\fBfree_line\fR frees a line struct previously returned by \fIread_line\fR.

\fBregister_ident\fR allows a module to identify itself to the talker.
The identification may be any string which does not contain return characters
and typically contains copyright information. The function returns 1 for
success or 0 for failure.

\fBclaim_command\fR allows a module to claim a command within the talker.
Any commands executed by a user in contact with the module will be returned
from \fIread_line\fR as type T_CMD. The function returns 1 for success and
0 for failure.

\fBwrite_user\fR sends a message directly to a user. The user does not
even have to be in contact with the module for this to work.

\fBwrite_level\fR sends a message to all users of a certain level and above.
The first argument should be a string which identifies the level such as
"consul".

\fBnotify_level\fR behaves exactly as \fIwrite_level\fR except it first sets
the attribute of all users at that level to "yellow" and performs an attribute
"reset" when it has finished.

\fBchattr\fR changes the screen attributes of a user. The current supported
attributes are \fIbold\fR, \fIyellow\fR, \fIred\fR and \fIreset\fR.

\fBforce\fR makes a user execute a command as if they typed it. This function
can make the user do \fBanything\fR which they could normally do and so jlm's
should be vetted by talker administrators! NB: If you want to ensure a user
does something and has not overidden the default behaviour with an alias,
then prefix the command with a backslash (\\) character.

.SH 'LINE STRUCT'
.nf
struct line {
	char	*user;
	char	*cmd;
	enum { T_SAY, T_EMOTE, T_CMD } action;
	char	*text;
	};

